---

- name: Install required apt packages
  become: yes
  apt:
    name: git
    state: present

- name: Install required pip packages
  become: yes
  pip:
    name: ['docker','docker-compose']
    state: present

- name: Check if mailcow installation directory exists
  become: yes
  stat:
    path: "{{ mailcow__install_path }}"
  register: mailcow_installed

- name: Clone mailcow git repo
  become: yes
  git:
    repo: 'https://github.com/mailcow/mailcow-dockerized.git'
    version: "{{ mailcow__git_version }}"
    umask: '022'
    update: false
    dest: "{{ mailcow__install_path }}"
  when: not mailcow_installed.stat.exists

- name: Generate mailcow.conf file
  shell: ./generate_config.sh
  environment:
    MAILCOW_HOSTNAME: "{{ mailcow__hostname }}"
    MAILCOW_TZ: "{{ mailcow__timezone }}"
  args:
    executable: /bin/bash
    chdir: "{{ mailcow__install_path }}"
    creates: mailcow.conf
  tags:
    - skip_ansible_lint

- name: Template settings for mailcow.conf
  become: yes
  import_tasks: mailcowconf.yml

- name: Template settings for Nginx
  become: yes
  import_tasks: nginx.yml

- name: Copy vars.local.inc.php
  become: yes
  template:
    src: vars.local.inc.php.j2
    dest: "{{ mailcow__install_path }}/data/web/inc/vars.local.inc.php"

- name: Check if mailcow containers are running
  become: yes
  community.docker.docker_container_info:
    name: "{{ mailcow__docker_compose_project_name }}_nginx-mailcow_1"
  register: mailcow_running

- name: Start mailcow container stack
  become: yes
  community.docker.docker_compose:
    project_src: "{{ mailcow__install_path }}"
    project_name: "{{ mailcow__docker_compose_project_name }}"
    state: present
    build: no
    pull: yes
  when: not mailcow_running.exists

- name: Update mailcow
  include_tasks: update.yml
  when:
    - mailcow_running.exists
    - mailcow__install_updates
